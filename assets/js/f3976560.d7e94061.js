"use strict";(self.webpackChunkPREFS=self.webpackChunkPREFS||[]).push([[844],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=l(r),f=a,h=u["".concat(s,".").concat(f)]||u[f]||m[f]||i;return r?n.createElement(h,p(p({ref:t},c),{},{components:r})):n.createElement(h,p({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,p=new Array(i);p[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,p[1]=o;for(var l=2;l<i;l++)p[l]=r[l];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},672:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return m},default:function(){return f}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),p=r(907),o=["components"],s={title:"Home",description:"Store and manage preferences easily.",hide_table_of_contents:!0},l=void 0,c={type:"mdx",permalink:"/PREFS/",source:"@site/src/pages/index.md"},m=[{value:"Features",id:"features",children:[],level:3},{value:"Limitations",id:"limitations",children:[],level:3},{value:"Example",id:"example",children:[],level:3}],u={toc:m};function f(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://patitotective.github.io/PREFS"},(0,i.kt)("img",{parentName:"a",src:"https://github.com/Patitotective/PREFS/blob/develop/assets/logo.png?raw=true",alt:"PREFS logo"}))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://pypi.org/project/prefs/"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/pypi/pyversions/prefs",alt:"Supported Python versions"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://pypi.org/project/prefs/"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/pypi/v/prefs",alt:"PREFS version"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://pepy.tech/project/prefs"},(0,i.kt)("img",{parentName:"a",src:"https://pepy.tech/badge/prefs",alt:"Downloads"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Patitotective/PREFS/stargazers"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/github/stars/patitotective/prefs",alt:"Stars"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Patitotective/PREFS/watchers"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/github/watchers/Patitotective/PREFS",alt:"Watchers"}))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://ci.appveyor.com/project/Patitotective/prefs"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/appveyor/build/Patitotective/PREFS",alt:"Build"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Patitotective/PREFS/commits/main"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/Patitotective/PREFS",alt:"Last commit"})),"\n",(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/github/repo-size/Patitotective/PREFS",alt:"Size"}),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Patitotective/PREFS/"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/github/license/Patitotective/PREFS",alt:"License MIT"})),"  "),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.python.org/"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/made%20with-python-blue",alt:"Made with Python"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://discord.gg/as85Q4GnR6"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/discord/891409914533118012?logo=discord",alt:"Discord server"}))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"PREFS")," is Python library that stores preferences in a text file with a dictionary-like structure."),(0,i.kt)("h3",{id:"features"},"Features"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Simple syntax."),(0,i.kt)("li",{parentName:"ul"},"Supports tree/cascade in nested dictionaries."),(0,i.kt)("li",{parentName:"ul"},"Supports ",(0,i.kt)("a",{parentName:"li",href:"docs/api/prefs#to_json"},(0,i.kt)("inlineCode",{parentName:"a"},"export")),"/",(0,i.kt)("a",{parentName:"li",href:"docs/api/functions#read_json"},(0,i.kt)("inlineCode",{parentName:"a"},"import"))," JSON files."),(0,i.kt)("li",{parentName:"ul"},"Supports ",(0,i.kt)("a",{parentName:"li",href:"docs/api/prefs#to_yaml"},(0,i.kt)("inlineCode",{parentName:"a"},"export")),"/",(0,i.kt)("a",{parentName:"li",href:"docs/api/functions#read_yaml"},(0,i.kt)("inlineCode",{parentName:"a"},"import"))," YAML files."),(0,i.kt)("li",{parentName:"ul"},"Supports bytes and ranges."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"docs/api/functions#read"},"Create a PREFS file manually and read it."),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"docs/resources"},"Resource system to bundle PREFS files"),". "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"docs/api/cli"},"Simple Command Line Interface tool"),".")),(0,i.kt)("h3",{id:"limitations"},"Limitations"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Keys can only be strings."),(0,i.kt)("li",{parentName:"ul"},"The supported types are int, float, str, list, tuple, set, dict, ",(0,i.kt)("strong",{parentName:"li"},"bytes")," and ",(0,i.kt)("strong",{parentName:"li"},"ranges"),".")),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},'import prefs\n\ndefault_prefs = {\n    "lang": "en", \n    "theme": "dark", \n    "scheme": {\n        "background-color": "#AB2E6A", \n        "font": {\n            "color": "#129396", \n            "size": 15\n            "family": "UbuntuMono"\n        }\n    }\n}\n\nmy_prefs = prefs.Prefs(default_prefs, path="settings.prefs")\nprint(my_prefs["scheme/font/size"])\n>>> 15\n\nmy_prefs["scheme/font/size"] = 20\nmy_prefs.pop("theme")\n')),(0,i.kt)("p",null,"A new file got created that looks like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:'title="settings.prefs"',title:'"settings.prefs"'},"#PREFS\nlang='en'\nscheme=>\n    background-color='#AB2E6A'\n    font=>\n        color='#129396'\n        size=20\n        family='UbuntuMono'\n")),(0,i.kt)("bold",null,"v",(0,p.yW)().label))}f.isMDXComponent=!0}}]);